name: "Blue Green Deployment"
on:
  workflow_call:
  push:
    branches:
      - main

#These environment variables are used by the terraform azure provider to setup OIDD authenticate.
##
env:
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"

jobs:
  plan:
    name: "Plan Job"
    strategy:
      matrix:
        stage: [blue, green]
    runs-on: ubuntu-latest
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true
    concurrency: ${{ matrix.stage }}
    steps:
      - uses: actions/checkout@v4

        # Install the latest version of the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP }}

      - name: "Download files"
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            cd ./terraform-live
            az storage blob download \
              --file provider.tf \
              --name provider.tf \
              --account-name lsoavdstac \
              --container-name ${{ matrix.stage }}-tf-files

            az storage blob download \
              --file backend.tf \
              --name backend.tf \
              --account-name lsoavdstac \
              --container-name ${{ matrix.stage }}-tf-files

            az storage blob download \
              --file ${{ matrix.stage }}.tfvars \
              --name ${{ matrix.stage }}.tfvars \
              --account-name lsoavdstac \
              --container-name ${{ matrix.stage }}-tf-files

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      ##
      - name: Terraform Init
        run: terraform init -reconfigure
        working-directory: ./terraform-live

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./terraform-live

      - name: Terraform Plan
        id: tf-plan
        run: |
          terraform -chdir=./terraform-live plan -var-file=${{ matrix.stage }}.tfvars -out=${{ matrix.stage }}.plan -lock-timeout=10m
      
      - name: "Save output file"
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            cd ./terraform-live
            az storage blob upload \
              --container-name ${{ matrix.stage }}-tf-files \
              --file ${{ matrix.stage }}.plan \
              --name ${{ matrix.stage }}.plan \
              --account-name lsoavdstac \
              --overwrite


  apply:
    name: "Apply Job"
    needs: plan
    strategy:
      matrix:
        stage: [blue, green]
    runs-on: ubuntu-latest
    environment: ${{ matrix.stage }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

        # Install the latest version of the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP }}

      - name: "Download files"
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            cd ./terraform-live
            az storage blob download \
              --file provider.tf \
              --name provider.tf \
              --account-name lsoavdstac \
              --container-name ${{ matrix.stage }}-tf-files

            az storage blob download \
              --file backend.tf \
              --name backend.tf \
              --account-name lsoavdstac \
              --container-name ${{ matrix.stage }}-tf-files

            az storage blob download \
              --file ${{ matrix.stage }}.plan \
              --name ${{ matrix.stage }}.plan \
              --account-name lsoavdstac \
              --container-name ${{ matrix.stage }}-tf-files

            az storage blob download \
              --file ${{ matrix.stage }}.tfvars \
              --name ${{ matrix.stage }}.tfvars \
              --account-name lsoavdstac \
              --container-name ${{ matrix.stage }}-tf-files
      
      - name: Terraform Init
        run: terraform init -reconfigure
        working-directory: ./terraform-live

      - name: Terraform Apply
        run: terraform apply -lock-timeout=10m ${{ matrix.stage }}.plan
        working-directory: ./terraform-live
        